<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vscode on 伊果的沒人看筆記本</title>
    <link>https://igouist.github.io/tags/vscode/</link>
    <description>Recent content in Vscode on 伊果的沒人看筆記本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hant-TW</language>
    <managingEditor>Igouist (Igouist)</managingEditor>
    <webMaster>Igouist (Igouist)</webMaster>
    <follow_challenge>
      <feedId>56200764111934464</feedId>
      <userId>41821085092905984</userId>
    </follow_challenge>
    <lastBuildDate>Sun, 01 Sep 2024 15:00:00 +0800</lastBuildDate><atom:link href="https://igouist.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VSCode: 使用 LiveShare 來即時線上協作吧</title>
      <link>https://igouist.github.io/post/2024/09/vscode-live-share/</link>
      <pubDate>Sun, 01 Sep 2024 15:00:00 +0800</pubDate>
      <author>Igouist (Igouist)</author>
      <guid>https://igouist.github.io/post/2024/09/vscode-live-share/</guid>
      <description>&lt;p&gt;在 VSCode 躺了一段時間的 LiveShare 終於派上了用場，這邊就簡單記錄一篇，方便以後推坑的時候用。&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/8qQxzrk.webp&#34; alt=&#34;Image&#34;width=&#34;600&#34; height=&#34;447&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;當時的情況是這樣的：在風和日麗的某個下午，我和女友去客美多（Komeda）喝超讚的蜂蜜冰咖啡，順便 &lt;del&gt;看著她加班&lt;/del&gt; 悠閒地 Coding。&lt;/p&gt;
&lt;p&gt;但麻煩的是，我們倆的座位是面對面的兩人座。所以當我們要邊看程式碼邊溝通時，得先把筆電轉 180 度，或是起身走到另一側，非常不方便&lt;/p&gt;
&lt;p&gt;就在來回走了幾趟 &lt;del&gt;漸漸不耐煩&lt;/del&gt; 之後，突然想起了香香的 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare&#34;&gt;LiveShare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LiveShare 可以讓我們在 VSCode 裡即時線上協作，一起編輯同一份程式碼&lt;/strong&gt;。&lt;br/&gt;並且也能看見對方游標的動作、在文件上留言互動等等&lt;/p&gt;
&lt;p&gt;當我們正在 WFH，或是像這種懶得走過去(?)，但又想要和朋朋們來場 Pair 的時候，LiveShare 就可以派上用場了！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;備註：Visual Studio 應該已經內建 LiveShare，&lt;br/&gt;可以從「檔案 &amp;gt; 開始 Live Share 工作階段」來開啟&lt;/p&gt;
&lt;p&gt;而 Jetbrains 的朋朋，&lt;br/&gt;請左轉使用 &lt;a href=&#34;https://www.jetbrains.com/code-with-me/&#34;&gt;Code with me&lt;/a&gt;，同樣也能線上開嚕&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;馬上來介紹一下安裝和基本的使用方式吧。&lt;/p&gt;
&lt;p&gt;首先第一步當然是先安裝擴充套件：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/zXoTEUA.webp&#34; alt=&#34;Image&#34;width=&#34;1233&#34; height=&#34;213&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;安裝完畢之後，在左下角應該就能看到 Live Share 的圖示：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/tFVEzq6.webp&#34; alt=&#34;Image&#34;width=&#34;954&#34; height=&#34;178&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;點擊之後就會開始分享囉，也會很貼心地幫你複製邀請連結：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/2Q4WycJ.webp&#34; alt=&#34;Image&#34;width=&#34;1109&#34; height=&#34;247&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;如果想再複製一次邀請連結，或是想要停止分享，就再戳一次左下角的 Live Share 圖示就可以了：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/DwxhLDP.webp&#34; alt=&#34;Image&#34;width=&#34;1481&#34; height=&#34;524&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;受邀者加入就可以開始線上協作囉！&lt;/p&gt;
&lt;p&gt;過程中可以看見對方游標所在的位置：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/TPQAYSd.webp&#34; alt=&#34;Image&#34;width=&#34;529&#34; height=&#34;228&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;同時在右上角也會有一些功能可以使用，例如追隨對方的視角，還有直接把對方畫面拉過來的大聲公：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/2axqUwE.webp&#34; alt=&#34;Image&#34;width=&#34;632&#34; height=&#34;186&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/fxcwjFK.webp&#34; alt=&#34;Image&#34;width=&#34;1853&#34; height=&#34;1357&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;除此之外，如果不方便通話，也可以留言討論（但大多時候還是邊通話邊改比較方便啦）&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/NslgcUv.webp&#34; alt=&#34;Image&#34;width=&#34;1153&#34; height=&#34;312&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;基本上有這些功能就可以搞定大部份 Pair 的場景了，有興趣的朋朋也可以試玩看看，&lt;br/&gt;線上協作，簡單方便，阿彌陀佛。&lt;/p&gt;
&lt;p&gt;那麼，今天的分享就到這邊。又成功水了一篇，下篇文章見～&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Polyglot Notebooks －－ 在 VSCode 簡單迅速地撰寫 C# 腳本吧</title>
      <link>https://igouist.github.io/post/2023/01/polyglot-notebooks/</link>
      <pubDate>Sat, 28 Jan 2023 18:00:00 +0800</pubDate>
      <author>Igouist (Igouist)</author>
      <guid>https://igouist.github.io/post/2023/01/polyglot-notebooks/</guid>
      <description>&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/vZzccvm.webp&#34; alt=&#34;Image&#34;width=&#34;843&#34; height=&#34;189&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;像我這樣的菜鳥工程師，&lt;strong&gt;在 Coding 的時候時常會需要簡單試一些想法&lt;/strong&gt;。像是「我這邊下了這串 Linq 出來的資料，到底是不是我想要的內容啊 = =？」&lt;/p&gt;
&lt;p&gt;或是在進行開發任務時：「這個步驟能不能這樣做啊？先拆個簡單的 Method 試試看好了」之類的&lt;/p&gt;
&lt;p&gt;以往遇到這種時候，我都會打開香香的 &lt;a href=&#34;https://kevintsengtw.blogspot.com/2011/09/linqpad-net.html&#34;&gt;Linqpad&lt;/a&gt; 直接無情開寫，快速地作個小小的概念驗證。&lt;/p&gt;
&lt;p&gt;畢竟 Linqpad 可以迅速地開始撰寫簡單的 C# 腳本，並且有良好的語法提示、Nuget 支援和方便的資料庫連線，省去我還要開一個 Console 專案自己弄這些東西，更可以存著之後備查，所以一直以來我都愛不釋手。&lt;/p&gt;
&lt;p&gt;但在因緣際會下（其實就是閒逛論壇的時候），發現了微軟把拔出的 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode&#34;&gt;Polyglot Notebooks&lt;/a&gt; 這款 VSCode 擴充套件。當下驚為天人！Linqpad 在我心中的地位就這麼動搖了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Polyglot Notebooks 可以讓我們直接在 VSCode 上面撰寫簡單的 C#、F#、JavaScirpt 等腳本、迅速驗證想法。甚至可以對程式碼分段、加入 Markdown 文檔，讓我們能更有邏輯、有步驟地撰寫我們的腳本、處理我們的資料。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它的特色是這麼對我的胃口，看來我以後鐵定是會用到的。現在就來簡單記錄 Polyglot Notebooks 的使用方式吧！&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#安裝及建立檔案&#34;&gt;安裝及建立檔案&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#開始撰寫腳本&#34;&gt;開始撰寫腳本&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#切換腳本語言加入更多儲存格&#34;&gt;切換腳本語言、加入更多儲存格&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#插入-markdown-儲存格&#34;&gt;插入 Markdown 儲存格&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#印出參數內容--簡單的-linq-操作範例&#34;&gt;印出參數內容 &amp;amp; 簡單的 Linq 操作範例&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#安裝-nuget-套件--簡單的呼叫-api-範例&#34;&gt;安裝 Nuget 套件 &amp;amp; 簡單的呼叫 API 範例&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#什麼是-magic-commands&#34;&gt;什麼是 Magic Commands&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#使用-set-來跨語言傳遞變數&#34;&gt;使用 #!set 來跨語言傳遞變數&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#小結&#34;&gt;小結&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#參考資料&#34;&gt;參考資料&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;h2 id=&#34;安裝及建立檔案&#34;&gt;安裝及建立檔案&lt;/h2&gt;
&lt;p&gt;首先我們需要先在 VSCode 找到「Polyglot Notebooks」這個擴充套件並安裝：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/RHsdh6J.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;235&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;安裝完畢之後，我們可以有兩種開啟方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增 ipynb 檔案再切換到 .NET Interactive 引擎&lt;/li&gt;
&lt;li&gt;使用 Polyglot Notebooks 的指令或快捷鍵，直接建立 dib 或 ipynb 檔案&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;補充：ipynb 檔案是用於撰寫 IPython Notebook 的檔案，也就是 Jupyter Notebook 在使用的檔案。而微軟把拔藉由 .NET Interactive 引擎讓 Jupyter Notebook 可以支援 C#, F#, SQL 等語言，讓 Notebook 可以支援多語言的撰寫，因此我們建立 ipynb 檔案也是可以撰寫 C# 的，感謝微軟把拔&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;由於我之前已經有在使用 Jupyter Notebook 撰寫 Python，因此這邊就以新增一個 ipynb 檔案進行示範：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/kjSzEzo.webp&#34; alt=&#34;Image&#34;width=&#34;328&#34; height=&#34;110&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/Z6gdYDa.webp&#34; alt=&#34;Image&#34;width=&#34;584&#34; height=&#34;140&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;建立了 ipynb 檔案之後，讓我們&lt;strong&gt;切換到 .NET Interactive 引擎&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/wntas5a.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;206&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;現在我們已經可以看到讓我們 Coding 的儲存格了，這樣就完成準備工作啦！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;補充：也可以使用 &lt;code&gt;Ctrl+Shift+Alt+N&lt;/code&gt; 快捷鍵，或是 &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; 叫出 VSCode 的指令窗來下 &lt;code&gt;Polyglot Notebook: Create new blank notebook&lt;/code&gt; 來直接建立檔案&lt;/p&gt;
&lt;p&gt;這時候 VSCode 會詢問你要建立 &lt;code&gt;.dib&lt;/code&gt; 或是 &lt;code&gt;.ipynb&lt;/code&gt;，其中 &lt;code&gt;.dib&lt;/code&gt; 進去就直接是 .NET Interactive 引擎，但目前還在實驗階段，並且 &lt;code&gt;ipynb&lt;/code&gt; 還是以較常見的格式，因此我都還是選擇慣用的 &lt;code&gt;.ipynb&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;開始撰寫腳本&#34;&gt;開始撰寫腳本&lt;/h2&gt;
&lt;p&gt;首先當然要從 Hello world 開始啦，讓我們直接在儲存格裡面開寫：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/g4T1oHZ.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;230&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;撰寫，然後&lt;strong&gt;按下全部執行或是左邊的單格執行&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/7Vj66zj.webp&#34; alt=&#34;Image&#34;width=&#34;1756&#34; height=&#34;1141&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;h3 id=&#34;切換腳本語言加入更多儲存格&#34;&gt;切換腳本語言、加入更多儲存格&lt;/h3&gt;
&lt;p&gt;儲存格的右下角可以讓我們&lt;strong&gt;切換語言&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/KNAYSfy.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;320&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;例如說我們可以來個 JavaScript：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/VZ3VmcX.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;222&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;當然我們並不是只有這一個小小的儲存格能用（否則我前面就不敢說可以切步驟了嘛）&lt;/p&gt;
&lt;p&gt;可以&lt;strong&gt;按下左上角的「＋程式碼」來新增程式碼儲存格&lt;/strong&gt;，或是把滑鼠移到儲存格最底部，會出現執行之後幫你往下新增一格的按鈕：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/R5gie4R.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;279&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;現在我們可以同時放上兩個語言啦：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/aXXsoMa.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;366&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;我們也可以針對某一格來執行，或是用滑鼠選擇指定的儲存格，就可以選擇執行指定的儲存格以上或以下的部份，如果有修改某一格，然後要從修改的部分重跑一次的時候還挺方便的：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/1pSg3Op.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;368&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;此外還有複製貼上儲存格、合併儲存格等等操作，可以在上圖右邊紅框的「…」找到，這邊就不再贅述。&lt;/p&gt;
&lt;h3 id=&#34;插入-markdown-儲存格&#34;&gt;插入 Markdown 儲存格&lt;/h3&gt;
&lt;p&gt;眼尖的朋友應該發現了，上面新增儲存格的地方除了「＋程式碼」以外，還有「＋Markdown」的選項&lt;/p&gt;
&lt;p&gt;畢竟 Polyglot Notebooks 這東西還是一本「筆記本」，只能貼 Code 不能寫筆記還算什麼筆記本呢，對吧？&lt;/p&gt;
&lt;p&gt;因此我們可以&lt;strong&gt;在程式碼區塊之間適當地加入 Markdown 區塊，來提供需要的資訊，或是紀錄需要的筆記&lt;/strong&gt;。讓我們撰寫的過程可以更有條理，之後回來閱讀也可以更快掌握內容。&lt;/p&gt;
&lt;p&gt;除了在最底下新增儲存格的做法以外，我們也可以對指定的區塊上下來插入新儲存格：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/fXuBzU6.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;368&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;現在讓我們加入 Markdown 內容：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/x1sEIc6.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;511&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;執行之後就會變成文檔的一部分囉！&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/18uDSVw.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;462&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;如果 Markdown 有用到標題之類的，實測也可以進行摺疊：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/563QFBt.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;556&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;如此一來這份 Notebook 也可以當作一份文件來保存下去了，豈不美哉！&lt;/p&gt;
&lt;h3 id=&#34;印出參數內容--簡單的-linq-操作範例&#34;&gt;印出參數內容 &amp;amp; 簡單的 Linq 操作範例&lt;/h3&gt;
&lt;p&gt;現在來一點實境題：假設我現在想要試試看怎麼「取出列表裡面，依據特定欄位分組後，每一組的第一筆資料」&lt;/p&gt;
&lt;p&gt;首先我們先做個測試用的 Class，並且捏一點測試用的假資料&lt;/p&gt;
&lt;p&gt;接著&lt;strong&gt;直接呼叫參數來印出內容確認&lt;/strong&gt;一下：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/r5zt5Dm.webp&#34; alt=&#34;Image&#34;width=&#34;1080&#34; height=&#34;965&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;現在我想要每一個 code 的第一筆，也就是 True 的那一筆。現在我覺得「也許 GroupBy 之後 Select 第一筆就搞定了吧？」&lt;/p&gt;
&lt;p&gt;這時候我就可以在下面新增一個儲存格來做測試：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/DeP1PMH.webp&#34; alt=&#34;Image&#34;width=&#34;1012&#34; height=&#34;231&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;搞定！現在我有信心使用這段 Code 了。還可以順便存成一個「分組取第一筆.ipynb」來讓以後的我可以抄，又是美好的一天。&lt;/p&gt;
&lt;h3 id=&#34;安裝-nuget-套件--簡單的呼叫-api-範例&#34;&gt;安裝 Nuget 套件 &amp;amp; 簡單的呼叫 API 範例&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;2024.4.20 更新：後來時常連公司自家的 Nuget 抓內部套件，決定回來補一下指定 Nuget 的範例&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;平常開發的時候，我們還會運用各種套件來完成目標。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 Polyglot Notebooks 裡可以使用 &lt;code&gt;#r &amp;quot;nuget:{套件名稱}&amp;quot;&lt;/code&gt; 來安裝 Nuget 套件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此外，如果有需要指定 Nuget 套件來源，也可以使用 &lt;code&gt;#i&lt;/code&gt; 來處理&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!c&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nuget:https://api.nuget.org/v3/index.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nuget:Newtonsoft.Json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 需要指定版本的話，可以在後面加上版本號。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 例如：#r &amp;#34;nuget:Newtonsoft.Json, 12.0.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Newtonsoft.Json;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; obj = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; { Name = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;James&amp;#34;&lt;/span&gt;, Age = &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; };
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; json = JsonConvert.SerializeObject(obj);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;// {&amp;#34;Name&amp;#34;:&amp;#34;James&amp;#34;,&amp;#34;Age&amp;#34;:30}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;什麼是-magic-commands&#34;&gt;什麼是 Magic Commands&lt;/h3&gt;
&lt;p&gt;在前面安裝套件的時候，我們使用了 &lt;code&gt;#&lt;/code&gt; 開頭的語法，這些語法被稱作「Magic Commands」&lt;/p&gt;
&lt;p&gt;可以參考：&lt;a href=&#34;https://github.com/dotnet/interactive/blob/main/docs/magic-commands.md&#34;&gt;Magic Commands 魔法命令 - dotnet/interactive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下使用程式碼區塊（Cell）紀錄一些比較常用的 Magic Commands：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!lsmagic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 使用 #!lsmagic 來列出所有支援的 Magic Commands&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 或是參考 https://github.com/dotnet/interactive/blob/main/docs/magic-commands.md&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!csharp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 使用 #!csharp 來指定語言為 C#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 支援的語言有：#!csharp (#!c#, #!C#), #!fsharp (#!f#, #!F#)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// #!powershell (#!pwsh), #!javascript (#!js), #!html, #!markdown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 使用 #!time 來計算 Cell 的執行時間&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// Wall time: 32.5128ms&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 也能使用 #!mermaid 來讓 Mermaid.js 繪製流程圖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph TD;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    A--&amp;gt;B;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    A--&amp;gt;C;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    B--&amp;gt;D;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    C--&amp;gt;D;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用-set-來跨語言傳遞變數&#34;&gt;使用 #!set 來跨語言傳遞變數&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;2024.4.20 更新：用了一段時間之後，發現這東西的其中一個香點就在跨語言。趕緊回來補一下這段&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;當我們需要在兩個不同的程式語言之間傳遞變數，就可以使用 &lt;code&gt;#!set&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可參考：&lt;a href=&#34;https://github.com/dotnet/interactive/blob/main/docs/variable-sharing.md&#34;&gt;Variable sharing 變量共享&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ps. &lt;code&gt;#!share&lt;/code&gt; 誕生的比較早，但後來推出了更香的 &lt;code&gt;#!set&lt;/code&gt;，所以這邊就只記 set 嚕 XD&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!c&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; fruitPrices = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apple&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;banana&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cherry&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 同一個語言不需要特別傳遞也抓得到，所以這邊 Csharp 傳給 Csharp 不用做什麼處理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;!c&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; fruitPricesInCs = JsonConvert.SerializeObject(fruitPrices);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Console.WriteLine(fruitPricesInCs); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// {&amp;#34;apple&amp;#34;:10,&amp;#34;banana&amp;#34;:20,&amp;#34;cherry&amp;#34;:30}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 現在讓我們到 JavaScript，這時候如果想從 Csharp 把變數拿過來，就需要用到 #!set
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;javascript&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fruitPricesInJs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;csharp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fruitPrices&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fruitPricesInJs&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// {&amp;#34;apple&amp;#34;:10,&amp;#34;banana&amp;#34;:20,&amp;#34;cherry&amp;#34;:30}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;小結&#34;&gt;小結&lt;/h2&gt;
&lt;p&gt;這篇記錄了 Polyglot Notebooks 的基本用法，並且介紹了一些我覺得很香的地方：輕便快速的驗證風格、能像 Python 的 Jupyter NoteBook 逐步對資料進行處理，又有 C# 的 Linq 能用，用這東西寫個爬蟲之類的小腳本，邊跑隨改實在是舒適的體驗。&lt;/p&gt;
&lt;p&gt;但同時因為這個工具還是 Preview 階段，被其他 IDE 養慣的我，已經習慣貼上語法之後讓 IDE 提示我 using 相關的命名空間進來了，因此像是 HttpClient 這種需要 using 的在這邊就很容易忘記，導致沒有跳自動完成提示的時候寫起來有點綁手綁腳（…說完感覺比較像是我的問題= = 我就菜）&lt;/p&gt;
&lt;p&gt;總之身為一個當年用過 Jupyter Notebooks 的使用者，還是很看好這個工具後續的發展。輕便又能按步驟執行、又跨語言、又能插 Markdown 來做文檔，怎麼想都香！&lt;/p&gt;
&lt;p&gt;&lt;del&gt;太香了太香了，是不是該拿來刷題了啊？&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2023.02.28 補充：&lt;br/&gt;前面提到沒有自動完成提示的問題，在搭配 &lt;strong&gt;Github Copilot&lt;/strong&gt; 之後，已經不是問題了！&lt;/p&gt;
&lt;p&gt;例如說需要 using 的時候，Github Copilot 會幫忙補：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/mGmDW01.webp&#34; alt=&#34;Image&#34;width=&#34;819&#34; height=&#34;159&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;安裝 Nuget 套件的時候，也會幫忙補上：&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/rI0bf5L.webp&#34; alt=&#34;Image&#34;width=&#34;807&#34; height=&#34;213&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;甚至－－&lt;/p&gt;
&lt;p&gt;


&lt;img
  src=&#34;https://image.igouist.net/IxaPE1U.webp&#34; alt=&#34;Image&#34;width=&#34;862&#34; height=&#34;803&#34; style=&#34;width: 100%; height: auto;&#34;fetchpriority=&#34;high&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;原來 Polyglot Notebooks 搭配 Github Copilot 才是完全體啊！&lt;/p&gt;
&lt;p&gt;&lt;del&gt;果然還是該拿來刷&amp;hellip;&lt;/del&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewlock.net/exploring-dotnet-interactive-notebooks/&#34;&gt;Exploring .NET interactive notebooks with VS Code (andrewlock.net)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.darkthread.net/blog/dotnet-interactive/&#34;&gt;用 Jupyter Notebook 寫 C# / PowerShell / JavaScript 筆記 - .NET Interactive-黑暗執行緒 (darkthread.net)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>