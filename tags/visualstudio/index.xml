<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VisualStudio on 伊果的沒人看筆記本</title>
    <link>https://igouist.github.io/tags/visualstudio/</link>
    <description>Recent content in VisualStudio on 伊果的沒人看筆記本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hant-TW</language>
    <managingEditor>Igouist (Igouist)</managingEditor>
    <webMaster>Igouist (Igouist)</webMaster>
    <follow_challenge>
      <feedId>56200764111934464</feedId>
      <userId>41821085092905984</userId>
    </follow_challenge>
    <lastBuildDate>Sun, 02 May 2021 10:00:00 +0800</lastBuildDate><atom:link href="https://igouist.github.io/tags/visualstudio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visual Studio: 在同一個檔案分割視窗</title>
      <link>https://igouist.github.io/post/2021/05/visual-studio-split-window-in-one-file/</link>
      <pubDate>Sun, 02 May 2021 10:00:00 +0800</pubDate>
      <author>Igouist (Igouist)</author>
      <guid>https://igouist.github.io/post/2021/05/visual-studio-split-window-in-one-file/</guid>
      <description>&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/LEB9mUy.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;當我們遇到比阿嬤的裹腳布還臭還長的類別時，常常會發生「需要一邊確認 Public 的 Function，但它用到的 Private Function 卻遠在天邊」，或是「SQL 字串／字串常數等等另外宣告在檔案最上端，導致瀏覽邏輯到一半的時候還要來回跳」的狀況。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&#34;https://igouist.github.io/post/2021/03/visual-studio-bookmark&#34;&gt;上一篇&lt;/a&gt; 我們分享過用書籤的方式來記錄兩個地方來回飛躍，但如果是要互相比對或理解流程等等時候，就比不上分割視窗來的方便。&lt;/p&gt;
&lt;p&gt;在 Visual Studio 用分割視窗的方式開啟不同的檔案，相信大家都已經駕輕就熟，尤其用過 Visual Studio 來進行 Merge 的朋友一定對這樣的排版不陌生。但是你知道就算&lt;strong&gt;對同一個檔案，也可以使用分割視窗來同時編輯兩個地方嗎&lt;/strong&gt;？只需要動動滑鼠就可以囉！&lt;/p&gt;
&lt;p&gt;我們只需要將滑鼠移到卷軸上…&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/H8G3k1M.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;就成功分割出來啦！&lt;/p&gt;
&lt;p&gt;接著只要使用 F6 就可以在兩個視窗之間切換，同時編輯同個檔案的兩個地方囉！&lt;/p&gt;
&lt;p&gt;這邊也分享給大家，下次遇到這些狀況就試試唄！&lt;/p&gt;
&lt;p&gt;&lt;del&gt;謝謝把連到資料表的 Function 裡的 SQL 語法丟到地球彼端的前輩，讓我必須找這種技巧來用&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio: 書籤 (bookmarks)</title>
      <link>https://igouist.github.io/post/2021/03/visual-studio-bookmark/</link>
      <pubDate>Sat, 13 Mar 2021 00:38:00 +0800</pubDate>
      <author>Igouist (Igouist)</author>
      <guid>https://igouist.github.io/post/2021/03/visual-studio-bookmark/</guid>
      <description>&lt;p&gt;今天從同事們那邊學到了書籤這個方便功能，趁還記得的時候來做個紀錄。&lt;/p&gt;
&lt;p&gt;那麼馬上就來操作一次：&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;Ctrl K&lt;/code&gt;, &lt;code&gt;Ctrl K&lt;/code&gt; 可以在指定的行號上加上一個「書籤」&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/uSBHhGt.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;接著我們就能在書籤視窗中看到這個書籤（檢視＞書籤視窗，或是 &lt;code&gt;Ctrl K&lt;/code&gt;, &lt;code&gt;Ctrl W&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/zyouiFg.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;在書籤視窗中，也可以對書籤重新命名，或是建立資料夾進行管理&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/MELQhKI.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;而當頁面中有多個書籤的時候，就可以利用 &lt;code&gt;Ctrl K&lt;/code&gt;, &lt;code&gt;Ctrl P&lt;/code&gt; 和 &lt;code&gt;Ctrl K&lt;/code&gt;, &lt;code&gt;Ctrl N&lt;/code&gt; 來在書籤中移動&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://i.makeagif.com/media/3-13-2021/6FC6nj.gif&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;這個快速移動能用在什麼時候呢？&lt;/p&gt;
&lt;p&gt;我們在進行一個專案時，會常常需要在多個檔案，或是在一個較長的檔案的各處來來回回。&lt;/p&gt;
&lt;p&gt;例如 private 方法離使用到的 public 方法有點遠，又或是我個人就常常會寫某個 Function 到一半的時候，突然發現：「啊！我忘記在建構式的時候把要用的對象傳進來了。」&lt;/p&gt;
&lt;p&gt;這時候就需要來回跑確認方法內容，或是移動到整個類別的頂部去增加宣告和修改建構式，接著再回到剛剛撰寫中的方法，在程式碼裡面折返跑，好不愉快。&lt;/p&gt;
&lt;p&gt;以往遇到這種狀況，我會稍微記一下行號，再利用 &lt;code&gt;Ctrl G&lt;/code&gt; 跳回去。&lt;/p&gt;
&lt;p&gt;今天跟同事聊到書籤的時候，就想到：像是上面的場景，便可以利用書籤來紀錄常用的幾個地方，並快速切換。並且用法也簡單直覺。&lt;s&gt;大概就像&lt;a href=&#34;https://baike.baidu.com/item/%E9%A3%9E%E9%9B%B7%E7%A5%9E%E4%B9%8B%E6%9C%AF&#34;&gt;飛雷神之術&lt;/a&gt;一樣吧。&lt;/s&gt;這邊就記錄一下，也分享給大家。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-tw/visualstudio/ide/setting-bookmarks-in-code?view=vs-2019&#34;&gt;設定程式碼書籤 - Visual Studio | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Visual studio 環境設定 —— 字型、套件、快捷鍵</title>
      <link>https://igouist.github.io/post/2020/03/visualstudio/</link>
      <pubDate>Sat, 28 Mar 2020 00:11:00 +0800</pubDate>
      <author>Igouist (Igouist)</author>
      <guid>https://igouist.github.io/post/2020/03/visualstudio/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;目標：整理一下自己用的&lt;strong&gt;字型、插件和快捷鍵&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;今天在工作時寫到一半突然藍屏，重開機之後俺的地表最強編譯器 Visual Studio 整個就開始鬧脾氣，打開專案整排都是 Error，連 System.Object 都找不到，差點往生。還好用了修復功能之後一切恢復正常，但是載入的插件和一些個人設定就這樣重置了……&lt;/p&gt;
&lt;p&gt;為了之後可能還會遇到相同的事情，這邊就先將平常的 Visual Studio 環境用到的設定做一份紀錄，之後遇到新插件或是什麼功能也可以回來更新這篇文，如此一來下次又被洗白的時候就可以回來參考了。&lt;/p&gt;
&lt;p&gt;這邊主要會記錄三個部分，並隨時可能更新。主要是字型、使用的插件以及常用的快捷鍵。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;不過我的 Visual Studio 也被洗白了所以這篇會跟著找回失落插件的歷程慢慢補上QQ&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;字型&#34;&gt;字型&lt;/h2&gt;
&lt;p&gt;字型部分必定、絕對要使用&lt;strong&gt;等寬字型&lt;/strong&gt;，這是必要的前提也是絕對的共識，畢竟你不會希望有什麼神秘空白，或是推個版就排版大炸裂之類的。&lt;/p&gt;
&lt;p&gt;推薦先參閱 &lt;a href=&#34;https://kevintsengtw.blogspot.com/2014/08/blog-post.html&#34;&gt;換個好字型讓程式開發有效率&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2021.01.27 補充：字型也可以看 &lt;a href=&#34;https://devfonts.gafi.dev/&#34;&gt;devfonts&lt;/a&gt; 。裡面直接放了超多 Coding 常用字型，也可以貼上 Code 直接進行比較，相當貼心。想逛一下挑個順眼字型的朋友直接試試唄。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;consolas&#34;&gt;Consolas&lt;/h3&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/az9u0B3.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

內建就有的字體，個人認為在不想另外下載字體的時候是相當優質的選擇。&lt;/p&gt;
&lt;p&gt;看起來粗粗圓圓的很放鬆。&lt;/p&gt;
&lt;h3 id=&#34;firacode&#34;&gt;FiraCode&lt;/h3&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/9OJpMXL.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

&lt;a href=&#34;https://github.com/tonsky/FiraCode&#34;&gt;FiraCode&lt;/a&gt;，整體看起來就是乾淨優雅，尤其是連字能使得整個 Code 更有滑順的感覺，十分推薦。&lt;/p&gt;
&lt;p&gt;然而，FiraCode 雖然陪伴我一段不短的時間，但還是有一個致命的缺陷：不支援中文！&lt;/p&gt;
&lt;p&gt;於是後來我基本上都使用下面介紹的這款&lt;/p&gt;
&lt;h3 id=&#34;更紗黑體&#34;&gt;更紗黑體&lt;/h3&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/yVMe5wC.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

&lt;a href=&#34;https://github.com/be5invis/Sarasa-Gothic&#34;&gt;更紗黑體&lt;/a&gt; 除了同樣支援連字以外，更支援多國語系。例如繁中就是有標註 TC 的字形，看見中英文都套用上去就是一陣舒服。是現在我的主力。&lt;/p&gt;
&lt;p&gt;至於不想用等寬字體的朋友，都看到這裡了，沒關係。下面這套推薦給你們&lt;/p&gt;
&lt;h3 id=&#34;ink-free&#34;&gt;Ink Free&lt;/h3&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/EShjvS5.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

就是這麼直接！這麼舒服！如果你的同事要過來 Code Review，不要猶豫字體直接換下去！&lt;/p&gt;
&lt;h2 id=&#34;變更環境字體&#34;&gt;變更環境字體&lt;/h2&gt;
&lt;p&gt;前面介紹了一些好用的字體，以及 &lt;a href=&#34;https://devfonts.gafi.dev/&#34;&gt;devfonts&lt;/a&gt; 這個超讚網站。接著就讓我們來設定 Visual Studio 的字體吧。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;工具 &amp;gt; 選項 &amp;gt; 環境 &amp;gt; 字型與色彩&lt;/code&gt; 中，能設定當前使用的字型。其中顯示設定可以選擇要變更哪個區塊的字型，最常用的應該就是改程式碼字型的「文字編輯器」了。&lt;/p&gt;
&lt;p&gt;這邊推薦一下我個人還會調整的部份：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CodeLens&lt;/li&gt;
&lt;li&gt;陳述式完成&lt;/li&gt;
&lt;li&gt;編譯器工具提示&lt;/li&gt;
&lt;li&gt;環境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/m2zfp6K.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;影響到的範圍會有&lt;/p&gt;
&lt;p&gt;環境相關的字體，例如上方的工具列&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/H5t6Jun.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/9hYcnfn.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;按下 &lt;code&gt;Alt + Enter&lt;/code&gt; 的小提示、方法上方的 CodeLen 小提示（N 個參考那個）&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/lHf3SHe.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;自動補完和註解說明等等&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/SaMzVkA.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;另外我個人還會把清單裡任何加上 &lt;code&gt;[]&lt;/code&gt; 的部份的字型也改掉：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有文具工具&lt;/li&gt;
&lt;li&gt;監看式、區域變數及自動變數工具視窗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果再搭配上&lt;a href=&#34;#%E9%85%8D%E8%89%B2%E4%B8%BB%E9%A1%8C&#34;&gt;配色主題&lt;/a&gt;就可以把整個 IDE 弄得更賞心悅目囉！&lt;/p&gt;
&lt;h2 id=&#34;擴充套件&#34;&gt;擴充套件&lt;/h2&gt;
&lt;h3 id=&#34;codemaid&#34;&gt;CodeMaid&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=SteveCadwallader.CodeMaid&#34;&gt;CodeMaid&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;極實用，我平常主要用到的功能是看&lt;strong&gt;複雜度&lt;/strong&gt;和&lt;strong&gt;自動排版&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/pf897N7.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

安裝之後可以開啟 CodeMaid Spade，其中函式右側的就是該函式的複雜度，複雜度指得就是該函式中各種不同狀況的路徑數量，例如一個 IF 就會有兩條路徑。&lt;/p&gt;
&lt;p&gt;而複雜度相當高的時候 CodeMaid Spade 的字體會變成紅色，屆時就應該思考這個函式是否做了太多事情，也就是有太多&lt;a href=&#34;https://igouist.github.io/post/2020/10/oo-10-single-responsibility-principle&#34;&gt;職責&lt;/a&gt;？是否應該把部分功能抽出來？平常可以迅速地提供參考。關於複雜度相關的工具也可以參閱：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/09/visual-studio-microsoft-codelens-code.html&#34;&gt;Visual Studio - Microsoft CodeLens Code Health Indicator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/02/visual-studio-code-metrics-viewer-2013.html&#34;&gt;Visual Studio 計算程式碼度量 - Code Metrics Viewer 2013&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/sb2440G.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

除了看見複雜度以外，這個插件的主要功能就在於程式碼的排版和整理，甚至可以設定成每當儲存時自動排版一次。對我這種懶人來說可是一大福音。但要小心跟其他人協作的時候如果全部重新排版可能動到人家的 Code 而且推送時的變更會爆炸多，要稍微注意。平常就養成順手 &lt;code&gt;Ctrl + K&lt;/code&gt;、&lt;code&gt;Ctrl + D&lt;/code&gt; 的習慣會更好。&lt;/p&gt;
&lt;h3 id=&#34;codemaintainibility&#34;&gt;CodeMaintainibility&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面： &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ognjen-babic.code-maintainibility&#34;&gt;Code Maintainibility&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;提到複雜度，也可以安裝這套 Code Maintainibility，在看複雜度的時候能夠更快更方便！&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/90Ox0rF.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;一樣在「管理擴充功能」直接搜尋就可以了，但這個套件似乎有改版過。我更新了 Visual Studio 才搜尋得到，如果找不到的朋友可以先嘗試更新看看。&lt;/p&gt;
&lt;p&gt;安裝之後就可以直接在各個 Function 上方的 CodeLens 直接看到複雜度指標囉！&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/No3C6yH.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;點開來也會顯示各項指標，包括可維護性、霍爾斯特德複雜度等等&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/aOCbIp1.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;也可以在設定之中調整預設顯示的指標&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/amDpQtp.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;這樣在撰寫和重構程式碼的時候就可以迅速又清楚看見複雜度指標，&lt;s&gt;心裡也至少有個底&lt;/s&gt;，可以說是方便不少呢&lt;/p&gt;
&lt;h3 id=&#34;editor-guidelines&#34;&gt;Editor Guidelines&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=PaulHarrington.EditorGuidelines&#34;&gt;Editor Guidelines&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在指定字數位置&lt;strong&gt;劃出直的輔助線&lt;/strong&gt;，我都用來標示出 100 字元 和 120 字元的位置，用來提醒自己要換行，以保持程式碼可以直直地閱讀下去，而不會為了往右滾動或是因為自動斷行在奇怪地方而中斷。&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/yBffyf3.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

可以看見右側有輔助線，通常只要長到碰到該線我就會將該行程式碼做斷行的調整。&lt;/p&gt;
&lt;p&gt;安裝之後可以在編輯器的任何位置按下右鍵，就可以增加和移除輔助線。


&lt;img
  src=&#34;https://image.igouist.net/0YqkYFI.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;如果想要在確切字元位置（如 100 字元），則可以在 &lt;code&gt;檢視 → 其他視窗 → 命令視窗&lt;/code&gt; 裡面輸入指令來加入輔助線&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Edit.AddGuideline 100 // 添加輔助線
Edit.RemoveAllGuidelines // 移除輔助線
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;關於換行的重要性，這篇 &lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/02/visual-studio-part1.html&#34;&gt;調整你的 Visual Studio - Part.1&lt;/a&gt; 說明得很仔細，並且也有上面 CodeMaid 的介紹，我之所以打算紀錄我的套件等也是基於這幾篇，推薦閱讀。&lt;/p&gt;
&lt;h3 id=&#34;codeblockendtag&#34;&gt;CodeBlockEndTag&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=KhaosPrinz.CodeBlockEndTag&#34;&gt;CodeBlockEndTag&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;主要是在&lt;strong&gt;括弧的結束部分會顯示出這個括弧所屬的區塊&lt;/strong&gt;（如附圖）。我有看見許多同事都使用替括弧上色的作法，不過我個人不喜歡太過五彩繽紛的感覺，因此強烈推薦這款插件。&lt;/p&gt;
&lt;p&gt;下載之後可以在 &lt;code&gt;工具 → 選項 → KC Extensions&lt;/code&gt; 裡面調整，有 當上括弧在畫面外時才顯示下括弧的文字，以及一律顯示（我個人都是使用一律顯示）&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/sRCndm3.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

可以看見 IF 跟函式結束的地方都有標示出括弧對應的區塊，在多層巢狀的時候相當有幫助。（雖然說更重要的是應該避免做出多層巢狀就是了）&lt;/p&gt;
&lt;h3 id=&#34;smartpaster&#34;&gt;SmartPaster&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=martinw.SmartPaster2013&#34;&gt;SmartPaster2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;貼上的時候可以&lt;strong&gt;選擇貼上的格式&lt;/strong&gt;，在插件介紹頁的示意圖就能夠一目瞭然。&lt;/p&gt;
&lt;h3 id=&#34;time-savers&#34;&gt;Time Savers&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=YannDuran.VisualStudioTimeSavers&#34;&gt;Time Savers&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;單純的省時小工具，可以&lt;strong&gt;在上方的工具列幫你長出一些 建置、以管理員重開等按鍵&lt;/strong&gt;。畢竟和建置那些可以直接快捷鍵的動作不一樣，有時候沒有以系統管理員身分開 Visual Studio 的時候會遇到一些神秘錯誤，重開又挺麻煩，因此直接放顆按鈕在上面是真的省了不少時間，要記得遵守工程師的美德：懶惰。能省時就省時！&lt;/p&gt;
&lt;h3 id=&#34;claudiaide&#34;&gt;ClaudiaIDE&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE&#34;&gt;ClaudiaIDE&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;這個跟效率就沒啥太大關係了，所以特別放在壓軸哈，這插件主要是用來&lt;strong&gt;修改編譯區塊的背景&lt;/strong&gt;使用的。&lt;/p&gt;
&lt;p&gt;剛安裝下來之後打開 Visual Studio 就會看到一個妹子。


&lt;img
  src=&#34;https://image.igouist.net/op0y1wf.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;當然這個背景圖是可以自由變更的，打開 &lt;code&gt;工具 → 選項 → ClaudiaIDE&lt;/code&gt; 就會看到以下的設置畫面


&lt;img
  src=&#34;https://image.igouist.net/O3KAm0N.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;主要會變動的地方會有 Opacity 透明度、File Path 圖片路徑 以及 Image Stretch 圖片填滿或是延展 這些設定，根據個人經驗，盡量用深色背景圖加上透明會比較順眼，主要還是要以不干擾閱讀程式碼為主&lt;/p&gt;
&lt;p&gt;像我這麼低調的換個藍底的 VS Logo 就足夠竊喜好一陣子了


&lt;img
  src=&#34;https://image.igouist.net/gjlxy52.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;順帶一提我同事的背景圖是用這張，嗯……


&lt;img
  src=&#34;https://image.igouist.net/YER0385.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;

（載下來示範截圖之後立馬換回來，實在過於微妙）&lt;/p&gt;
&lt;h3 id=&#34;visual-studio-iconizer&#34;&gt;Visual Studio Iconizer&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=OlegTarasov.VisualStudioIconizerforVisualStudio15&#34;&gt;Visual Studio Iconizer&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;這個則是讓你的 Visual Studio 質感飛升的關鍵：它會替你的工具欄加上 icon！&lt;/p&gt;
&lt;p&gt;先來看看原本的工具視窗釘選之後長怎樣：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/s0zVMsN.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;安裝後：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/004mjQq.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;當然如果怕找不到的話，也可以圖文並行（&lt;code&gt;工具 → 選項 → iconizer&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/ScUCjeU.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;


&lt;img
  src=&#34;https://image.igouist.net/WjLE5Tf.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;h3 id=&#34;output-enhancer--metaoutput&#34;&gt;Output enhancer &amp;amp; MetaOutput&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;市集頁面：&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=NikolayBalakin.Outputenhancer&#34;&gt;Output enhancer&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;最後來介紹個實用的 Output enhancer：替你的輸出視窗上色&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/KGW1DrK.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;警告跟錯誤等等就會更顯眼囉！&lt;/p&gt;
&lt;p&gt;如果想要更進一步也可以使用他們的另一款整合過的 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ViacheslavLozinskyi.MetaOutput-2019&#34;&gt;MetaOutput&lt;/a&gt;（&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ViacheslavLozinskyi.MetaOutput-2022&#34;&gt;2022&lt;/a&gt;），輸出視窗就會變為條列式：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/IRBlGGv.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;除了會折疊輸出訊息以外，也能調整哪部分訊息可以省略：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/KQutBi1.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;也可以進行搜尋：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/0lNna9g.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;個人覺得挺方便的。雖然日常狀況還是等紅字跳出來再說 XD&lt;/p&gt;
&lt;h2 id=&#34;設定&#34;&gt;設定&lt;/h2&gt;
&lt;h3 id=&#34;變更-visual-studio-程式碼的配色為新版本-2019&#34;&gt;變更 Visual Studio 程式碼的配色為新版本 (2019)&lt;/h3&gt;
&lt;p&gt;Visual Studio 2019 預設的程式碼配色會是 2017 版本的，因此可以先調整更改成 2019 版本。&lt;/p&gt;
&lt;p&gt;更改的位置在 &lt;code&gt;工具 &amp;gt; 選項 &amp;gt; 文字編輯器 &amp;gt; C# (看個人使用語言) &amp;gt; 進階&lt;/code&gt; 接著拉至最底找到 &lt;code&gt;編輯器色彩配置&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/lbUP19r.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;把它更改成 2019 版本的就可以囉&lt;/p&gt;
&lt;p&gt;變更前：


&lt;img
  src=&#34;https://image.igouist.net/IMr2ViF.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;變更後：


&lt;img
  src=&#34;https://image.igouist.net/s0zYjmu.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;可以看到變數、方法都有上色了，在整排 Linq 連發的 Code 裡面可是相當實用呢&lt;/p&gt;
&lt;h3 id=&#34;開啟內嵌提示&#34;&gt;開啟內嵌提示&lt;/h3&gt;
&lt;p&gt;這邊推薦把「內嵌提示」這個實驗性功能打開，可以大大增加程式碼的可讀性。&lt;/p&gt;
&lt;p&gt;首先讓我們先到 &lt;code&gt;選項 &amp;gt; 文字編輯器 &amp;gt; C# &amp;gt; 進階&lt;/code&gt;，並且往下拉就可以看到內嵌提示。&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/FMERRDD.webp&#34; alt=&#34;image-20210830065440439&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;其中「&lt;strong&gt;顯示內嵌參數名稱&lt;/strong&gt;」勾選起來的話，就會在呼叫方法時顯示該參數的名稱，如下圖的 &lt;code&gt;startIndex&lt;/code&gt; 和 &lt;code&gt;length&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/7QCEEkY.webp&#34; alt=&#34;image-20210830065736932&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;像這種呼叫方法時傳遞的常數，例如 &lt;code&gt;0&lt;/code&gt;、&lt;code&gt;false&lt;/code&gt; 等等，加上參數名稱就能大大提升可讀性。&lt;/p&gt;
&lt;p&gt;但當我們是傳遞變數的時候，常常都已經針對該物件做好妥善的命名了，所以可以把子項的「當參數名稱符合方法的意圖時，不出現提示」也勾選起來，避免命名已經足夠描述內容時反而造成干擾。&lt;/p&gt;
&lt;p&gt;接著「&lt;strong&gt;顯示內嵌類型提示&lt;/strong&gt;」也可以勾選起來，顧名思義就是會在洽當的時候提醒你「這東西是這個型別呦！」的小助手。&lt;/p&gt;
&lt;p&gt;其中我會關閉第一項「顯示有推斷類型之變數的提示」，它的效果就是每當你使用 &lt;code&gt;var&lt;/code&gt; 的時候就會顯示推測的型別，例如：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/nGyRm6J.webp&#34; alt=&#34;image-20210830071205401&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;可以看到 &lt;code&gt;var&lt;/code&gt; 的後面會補上型別。&lt;del&gt;不過這樣我排版就亂掉了，而且我就是打算把型別丟給 C# 處理才用 var 的所以掰掰&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;而第二項「&lt;strong&gt;顯示 Lambda 參數類型的提示&lt;/strong&gt;」這個就相當推薦打開了，作用的方式會像這樣：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/RVqvtcJ.webp&#34; alt=&#34;image-20210830071404915&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;當你在使用 Linq 的時候，就能更清楚知道現在自己在操作的是哪個型別、哪個部分。在 &lt;code&gt;Join&lt;/code&gt;、&lt;code&gt;Groupby&lt;/code&gt; 等等需要對串列連續地進行處理的時候，能夠發揮莫大的功效，特別強烈推薦要打開。&lt;/p&gt;
&lt;h3 id=&#34;對目前所在行醒目提示&#34;&gt;對目前所在行醒目提示&lt;/h3&gt;
&lt;p&gt;這段其實是發完文之後才補充的啦，這邊要推薦一個好用的設定：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;工具 &amp;gt; 選項 &amp;gt; 環境 &amp;gt; 字型與色彩&lt;/code&gt; 然後在下拉式選單找到 &lt;code&gt;反白顯示目前的行&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就可以對游標所在的那行做醒目提示囉！&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/qvh8i8l.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;圖中的綠色就是醒目提示。&lt;/p&gt;
&lt;p&gt;之前和大前輩聊到這個反白行，前輩表示他很討厭，因為他不太需要一條會干擾的色塊告訴他正在這&lt;/p&gt;
&lt;p&gt;但像我這種菜雞，按著 Ctrl + G 就不知道自己飛哪裡去了，還是標記一下好哈哈。&lt;/p&gt;
&lt;h3 id=&#34;調整索引標籤設定&#34;&gt;調整索引標籤設定&lt;/h3&gt;
&lt;p&gt;個人習慣將索引標籤放在右側，如此一來就可以更清楚地看到檔案名稱，而且條列式地由上往下看還是比較符合平時看 Code 的習慣。&lt;/p&gt;
&lt;p&gt;索引標籤的位置可以在 &lt;code&gt;工具 &amp;gt; 選項 &amp;gt; 環境 &amp;gt; 索引標籤和視窗&lt;/code&gt; 裡進行調整：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/sIRwNBz.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;這邊也強烈建議將 專案/路徑 分組勾選開來，可以幫助我們更快找到開啟的索引：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/urbQnTd.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;在 Visual Studio 2022 時，可以更進一步打開依專案著色索引的功能：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/4mmuJqs.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/5fVIZlL.webp&#34; alt=&#34;Image&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;這樣開一堆索引要找的時候就更快了！&lt;/p&gt;
&lt;p&gt;&lt;del&gt;如果從來不用索引標籤，就是無情的 &lt;code&gt;Ctrl T&lt;/code&gt; 或是 &lt;code&gt;Ctrl Tab&lt;/code&gt; 打全場的也可以不用上色沒關係就是了…&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;配色主題&#34;&gt;配色主題&lt;/h2&gt;
&lt;h3 id=&#34;one-dark-pro&#34;&gt;One Dark Pro&lt;/h3&gt;
&lt;p&gt;這邊推薦我在 Visual Studio Code 也很愛用的主題：&lt;strong&gt;One Dark Pro&lt;/strong&gt;，前陣子才發現居然在 Visual Studio 上也能看到熟悉的配色，馬上就安裝下來了。&lt;/p&gt;
&lt;p&gt;因為它也是擴充套件之一，所以一樣讓我們打開 &lt;code&gt;延伸模組 &amp;gt; 管理延伸模組&lt;/code&gt;，並搜尋 &lt;code&gt;One Dark Pro&lt;/code&gt;，找到並安裝下來：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/pXGqoqd.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;下載好之後需要關閉 Visual Studio 安裝一下。&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/CGuQ6ge.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;安裝好了之後重新開啟 Visual Studio，並前往 &lt;code&gt;工具 &amp;gt; 選項&lt;/code&gt;，在左邊找到 &lt;code&gt;環境&lt;/code&gt;，就可以從色彩佈景主題裡選擇 One Dark Pro 囉：&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/ZrtztVV.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;

&lt;img
  src=&#34;https://image.igouist.net/4oBef8K.webp&#34;style=&#34;aspect-ratio: ZgotmplZ; width: 100%; height: auto;&#34;loading=&#34;lazy&#34; decoding=&#34;async&#34;&gt;
&lt;/p&gt;
&lt;p&gt;果然還是熟悉的配色最對味～大家也可以嘗試安裝看看配色主題呦！會有一番新滋味呢。&lt;/p&gt;
&lt;h2 id=&#34;快捷鍵&#34;&gt;快捷鍵&lt;/h2&gt;
&lt;p&gt;最後大概整理一下平常會按到的快捷鍵，方便上班在外可以直接回來偷看。（希望有朝一日能夠寫起來時雙手不離鍵盤 XD）&lt;/p&gt;
&lt;h3 id=&#34;偵錯&#34;&gt;偵錯&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;執行(debug)：F5&lt;/li&gt;
&lt;li&gt;執行(non debug)：Ctrl + F5&lt;/li&gt;
&lt;li&gt;全部儲存：Ctrl + Shift + S&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;單步執行：F11 (F10)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;切換斷點：F9&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;啟用/停用斷點：Ctrl + F9&lt;/li&gt;
&lt;li&gt;刪除所有斷點：Ctrl + Shift + F9&lt;/li&gt;
&lt;li&gt;（單元測試）對全部測試：Ctrl + R, A&lt;/li&gt;
&lt;li&gt;（單元測試）對全部偵錯：Ctrl + R, Ctrl + A&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;檢視&#34;&gt;檢視&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;程式碼編輯器分頁切換 ：Ctrl+TAB&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;顯示屬性窗口：F4&lt;/li&gt;
&lt;li&gt;關閉目前視窗：Ctrl + F4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移至定義：F12&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;列出參考：Shift + F12&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移至目標：Ctrl + T =&amp;gt; 輸入目標&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;巡覽列：Ctrl + F2 =&amp;gt; Tab&lt;/li&gt;
&lt;li&gt;工具列：Alt + (對應鍵)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;線上搜尋微軟官方文件：F1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;回到編輯器區塊：F7&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://igouist.github.io/post/2021/03/visual-studio-bookmark/&#34;&gt;書籤&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;在指定行號上新增書籤：Ctrl + K, Ctrl + K&lt;/li&gt;
&lt;li&gt;開啟書籤視窗：Ctrl + K, Ctrl + W&lt;/li&gt;
&lt;li&gt;移動到上一個書籤：Ctrl + K, Ctrl + P&lt;/li&gt;
&lt;li&gt;移動到下一個書籤：Ctrl + K, Ctrl + N&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;編輯&#34;&gt;編輯&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;選取目前文字：Ctrl + W&lt;/li&gt;
&lt;li&gt;選取同個變數：Shift + Ctrl + ↑/↓&lt;/li&gt;
&lt;li&gt;選取目標區塊：Shift + Ctrl + }&lt;/li&gt;
&lt;li&gt;註解選取範圍：Ctrl + K,C&lt;/li&gt;
&lt;li&gt;取消註解選取範圍：Ctrl + K,U&lt;/li&gt;
&lt;li&gt;選取文字改小寫：Ctrl + U&lt;/li&gt;
&lt;li&gt;選取文字改大寫：Ctrl + Shift + U&lt;/li&gt;
&lt;li&gt;呼叫出類別成員：Ctrl + J (編到一半時 tips 突然不見很好用)&lt;/li&gt;
&lt;li&gt;收攏原始碼：Ctrl + M, O&lt;/li&gt;
&lt;li&gt;展開原始碼：Ctrl + M, L&lt;/li&gt;
&lt;li&gt;收攏／展開當前區塊：Ctrl + M, Ctrl + M&lt;/li&gt;
&lt;li&gt;刪除目前這行：Ctrl + Shift + L&lt;/li&gt;
&lt;li&gt;刪除目前往後：Ctrl + Delete&lt;/li&gt;
&lt;li&gt;檔案最前面：Shift + Home&lt;/li&gt;
&lt;li&gt;檔案最後面：Shift + End&lt;/li&gt;
&lt;li&gt;選到最前面：Ctrl + Shift + Home&lt;/li&gt;
&lt;li&gt;選到最後面：Ctrl + Shift + End&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跳至行號：Ctrl + G&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在上面插入一行： Ctrl + Enter&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多行選取：Shift + Alt + ↑ or ↓&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打開右鍵選單：Shift + F10&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2014/08/blog-post.html&#34;&gt;換個好字型讓程式開發有效率&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/02/visual-studio-part1.html&#34;&gt;調整你的 Visual Studio - Part.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/02/visual-studio-part2.html&#34;&gt;調整你的 Visual Studio - Part.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/09/visual-studio-microsoft-codelens-code.html&#34;&gt;Visual Studio - Microsoft CodeLens Code Health Indicator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevintsengtw.blogspot.com/2015/02/visual-studio-code-metrics-viewer-2013.html&#34;&gt;Visual Studio 計算程式碼度量 - Code Metrics Viewer 2013&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/HW140701/article/details/85162678?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&amp;amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&#34;&gt;Visual Studio 增加每行最多字符数限制参考线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;各位整理快捷鍵的大大們，族繁不及備載&lt;/li&gt;
&lt;li&gt;感謝辦公室門口旁邊的不知名同事，讓我發現可以放 &lt;del&gt;妹子&lt;/del&gt; 圖片在 Visual Studio 裡&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>